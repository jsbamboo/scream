# This macro creates tests to compare a set of files, which differ in their name
# by a simple substring. For instance, files generated with a different number of
# MPI ranks, containing something like np1,np2,... in their names.

# Inputs
#  - TEST_BASE_NAME: the base name to be given to the tests generated by this macro
#  - FILE_META_NAME: the name of the files. This *must* contain ${MAGIC_STRING}.
#  - MAGIC_STRING  : the string that will be replaced with each of the MAGIC_VALUES entries
#  - MAGIC_VALUES  : the values to be used to replace ${MAGIC_STRING} in ${FILE_META_NAME}

macro (CompareNCFilesFamily TEST_BASE_NAME FILE_META_NAME MAGIC_STRING MAGIC_VALUES)
  include (BuildCprnc)

  # Parse optional args
  set(options)
  set(args_1v)
  set(args_mv LABELS FIXTURES_REQUIRED)
  cmake_parse_arguments(PARSE "${options}" "${args_1v}" "${args_mv}" ${ARGN})
  CheckMacroArgs(CompareNCFilesFamily PARSE "${options}" "${args_1v}" "${args_mv}")

  # Sanity check
  if (NOT FILE_META_NAME MATCHES ${MAGIC_STRING})
    message ("Error! MAGIC_STRING not contained in FILE_META_NAME.")
    message (" MAGIC_STRING: ${MAGIC_STRING}")
    message (" FILE_META_NAME: ${FILE_META_NAME}")
  endif()


  list (POP_FRONT MAGIC_VALUES first)
  set (TGT_FILE ${FILE_META_NAME})
  string (REPLACE ${MAGIC_STRING} ${first} TGT_FILE ${TGT_FILE})
  foreach (item IN LISTS MAGIC_VALUES)
    # Ensure cprnc is built
    BuildCprnc()

    # Expand the rank magic string in src file
    set (SRC_FILE ${FILE_META_NAME})
    string (REPLACE ${MAGIC_STRING} ${item} SRC_FILE ${SRC_FILE})

    # Create the test
    set (TEST_NAME "${TEST_BASE_NAME}_${item}_vs_${first}")
    add_test (NAME ${TEST_NAME}
              COMMAND cmake -P ${CMAKE_BINARY_DIR}/bin/CprncTest.cmake ${SRC_FILE} ${TGT_FILE}
              WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})

    # Set test properties, if needed
    if (PARSE_LABELS)
      set_tests_properties(${TEST_NAME} PROPERTIES LABELS "${PARSE_LABELS}")
    endif()
    if (PARSE_FIXTURE_REQUIRED)
      set_tests_properties(${TEST_NAME} PROPERTIES FIXTURES_REQUIRED ${PARSE_FIXTURE_REQUIRED})
    endif()
  endforeach()
endmacro (CompareNCFilesFamily)
